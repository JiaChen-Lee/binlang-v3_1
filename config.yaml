name: efficientnet_cut
program: main.py
metric:
  name: Test/Acc_Top1
  goal: maximize
method: bayes
parameters:
  model:
    values:
      - "resnest50"
      - "resnest101"
      - "efficientnet-b0"
      - "efficientnet-b1"
      - "efficientnet-b2"
      - "efficientnet-b3"
      - "efficientnet-b4"
      - "efficientnet-b5"
      - "efficientnet-b6"
      - "efficientnet-b7"
      - "resnet18_cbam"
      - "resnet34_cbam"
      - "resnet50_cbam"
      - "resnet101_cbam"
      - 'vit_small_patch16_224'
      - 'vit_base_patch16_224'
      - 'vit_base_patch16_384'
      - 'vit_base_patch32_384'
      - 'vit_large_patch16_224'
      - 'vit_large_patch16_384'
      - 'vit_large_patch32_384'
  init_learning_rate:
    min: 0.000001
    max: 0.0005
  weight_decay:
    min: 0.
    max: 0.01
  batch_size:
    values:
      - 4
      - 8
      - 16
      - 32
      - 64
      - 128
  input_size:
    values:
      - 224
      - 240
      - 260
      - 300
      - 380
      - 384
      - 456
      - 528
      - 600

command:
  - python
  - ${program}